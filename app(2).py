# T√™n file: app(2).py
# (File ch√≠nh ƒë√£ ƒë∆∞·ª£c refactor - Ch·ªâ ch·ª©a UI v√† g·ªçi h√†m)

import streamlit as st

# =============================================================================
# B∆Ø·ªöC 1: IMPORT C√ÅC H√ÄM ƒêI·ªÄU PH·ªêI
# =============================================================================
try:
    from pipeline_orchestrator import load_all_models, run_full_pipeline
except ImportError as e:
    st.error(f"L·ªói: Kh√¥ng t√¨m th·∫•y file 'pipeline_orchestrator.py'. {e}")
    st.stop()

# =============================================================================
# B∆Ø·ªöC 2: GIAO DI·ªÜN WEB APP
# =============================================================================

st.set_page_config(page_title="ABSA Pipeline", layout="wide")
st.title("üöÄ Pipeline Ph√¢n t√≠ch C·∫£m x√∫c (ABSA) - Modular")
st.markdown("Nh·∫≠p m·ªôt c√¢u ƒë√°nh gi√° (review) v√† ·ª©ng d·ª•ng s·∫Ω ch·∫°y pipeline 5 b∆∞·ªõc ƒë·ªÉ tr√≠ch xu·∫•t: **Clause, Term, Opinion, Category, Polarity**.")

# --- T·∫£i t·∫•t c·∫£ m√¥ h√¨nh ---
# (Ch·ªâ g·ªçi 1 h√†m duy nh·∫•t)
models = load_all_models()

# --- Khu v·ª±c nh·∫≠p li·ªáu ---
default_sentence = "The food was great and the staff was very friendly, but the room was a bit small."
sentence = st.text_area("Nh·∫≠p c√¢u ƒë√°nh gi√° c·ªßa b·∫°n:", default_sentence, height=100)

if st.button("Ph√¢n t√≠ch", type="primary"):
    if not sentence.strip():
        st.warning("Vui l√≤ng nh·∫≠p m·ªôt c√¢u.")
    else:
        try:
            # --- Ch·∫°y Pipeline ---
            # (Ch·ªâ g·ªçi 1 h√†m duy nh·∫•t)
            results_df = run_full_pipeline(sentence, models)
            
            # --- Hi·ªÉn th·ªã k·∫øt qu·∫£ ---
            if not results_df.empty:
                st.subheader("K·∫øt qu·∫£ Ph√¢n t√≠ch Pipeline")
                st.dataframe(results_df, use_container_width=True)
            
        except Exception as e:
            st.error(f"ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh x·ª≠ l√Ω pipeline: {e}")
            st.exception(e)